#!../output/nlc --eval

# Example implementation DSL â€” domain-specific language for english
# Macros implementation name:"\name", body start: "\\", body end: "\\\", replace var_args \$*
# \macro \\body macro no args\\\ # End body
# \macro(arg1, arg2, ...) \\body macro form args as function call: $arg1 or ${arg1}${arg2}    \$* \\\
# \macro arg1 arg2 ...\\body macro from args as sequence: $arg1  ${arg1}${arg2}    \$* \\\  ?????????????????????

\false \\0:Bool\\\
\true \\1:Bool\\\

\self \\$0\\\
\parent \\$$\\\
\local \\$\\\
\global \\@\\\
?????????????  \int var\\${var}:Int\\\  # Use: \int integer = 100;  ???????????????????????

\if(cond) \\ ($cond) -> \\\

\then \\ {
 \\\

\elseif(cond) \\},
 ($cond) -> \\\

\else \\,
 _ -> {\\\

\endif \\
 }; \\\

\while(cond) \\ ($cond) -->> {\\\
\endwhile \\};\\\

\until \\{\\\
\enduntil(cond) \\} <<-- ($cond);\\\

\return  \\ -- \\\
\return(...)  \\ -- \$*\\\
\throw(...)  \\ -- :Error(\$*)\\\

\match(val) \\($val)==>{\\
\case(val) \\($val) -> {
\endcase \\};
\endmatch \\};\\\

